MODULE CONSOLE;
(*
	BSD 2-Clause License

	Copyright (c) 2018, Anton Krotov
	All rights reserved.
	*)

IMPORT mUtil := UTILS,
	mStr := STRINGS;

PROCEDURE String* (pStr: ARRAY OF CHAR);
	VAR
		_i: INTEGER;

	BEGIN
		_i := 0;
		WHILE (_i < LEN(pStr)) & (pStr[_i] # 0X) DO
			mUtil.OutChar(pStr[_i]);
			INC(_i)
		END
	END String;

PROCEDURE Int* (pInt: INTEGER);
	VAR
		_str: ARRAY 32 OF CHAR;

	BEGIN
		mStr.IntToStr(pInt, _str);
		String(_str)
	END Int;

PROCEDURE Int2* (pInt: INTEGER);
	BEGIN
		IF pInt < 10 THEN
			String("0")
		END;
		Int(pInt)
	END Int2;

PROCEDURE Ln*;
	BEGIN
		String(mUtil.eol)
	END Ln;

PROCEDURE StringLn* (pStr: ARRAY OF CHAR);
	(* Out string to console with Ln *)
	BEGIN
		String(pStr);
		String(mUtil.eol)
	END StringLn;

PROCEDURE IntLn* (pInt: INTEGER);
	(* Out integer to console with Ln *)
	BEGIN
		Int(pInt);
		Ln()
	END IntLn;

PROCEDURE Int2Ln* (pInt: INTEGER);
	(* Out integer to console with Ln *)
	BEGIN
		Int2(pInt);
		Ln()
	END Int2Ln;

END CONSOLE.
